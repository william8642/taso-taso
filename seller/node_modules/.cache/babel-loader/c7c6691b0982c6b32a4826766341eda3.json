{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\william\\\\Desktop\\\\taso-taso\\\\seller\\\\src\\\\components\\\\seller_back\\\\pages\\\\SellerLogin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Modal } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport '../../../style/login.css';\n\nfunction SellerLogin(props) {\n  _s();\n\n  const {\n    isAuth,\n    setisAuth,\n    loginModalShow,\n    setLoginModalShow\n  } = props;\n  const [memberLoginEmail, setMemberLoginEmail] = useState('');\n  const [memberLoginPwd, setMemberLoginPwd] = useState(''); //按下modal裡的「登入」觸發的function\n\n  function loginInfoSubmit() {\n    let loginInfo = document.querySelector('#loginInfo');\n\n    if (memberLoginEmail === '') {\n      loginInfo.innerHTML = '請輸入電子郵件';\n    }\n\n    if (memberLoginPwd === '') {\n      loginInfo.innerHTML = '請輸入密碼';\n    }\n\n    const data = {\n      account: memberLoginEmail,\n      password: memberLoginPwd\n    };\n    fetch('http://localhost:3000/seller/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(res => {\n      console.log(res);\n      return res.json();\n    }).then(row => {\n      console.log(row[0]);\n      const memberLoginId = JSON.stringify(row);\n      localStorage.setItem('row', row);\n\n      if (localStorage.getItem('row') !== '') {\n        alert(\"登入成功！\"); // setisAuth(true)\n\n        setLoginModalShow(false);\n        props.history.push('/MainPage');\n        setMemberLoginEmail('');\n        setMemberLoginPwd('');\n      } else {\n        alert(\"帳號密碼錯誤！\");\n      }\n    }).catch(error => {\n      alert(\"登入失敗！\");\n    });\n  }\n\n  const [loginOrRegister, setLoginOrRegister] = useState(true);\n\n  function modalOnHide() {\n    setLoginModalShow(false);\n    setLoginOrRegister(true);\n    setMemberLoginEmail('');\n    setMemberLoginPwd('');\n  } //登入登出btn狀態function\n\n\n  function loginBtnCtrl() {\n    if (!isAuth) {\n      setLoginModalShow(true);\n    } else {\n      setLoginModalShow(false);\n      setisAuth(false);\n    }\n  } //登入\n\n\n  const loginOrRegisterTrue = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"\\u6703\\u54E1\\u767B\\u5165\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"loginEmail\",\n            children: \"\\u96FB\\u5B50\\u90F5\\u4EF6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: \"form-con\",\n            id: \"loginEmail\",\n            \"aria-describedby\": \"emailHelp\",\n            placeholder: \"\\u8ACB\\u8F38\\u5165\\u96FB\\u5B50\\u90F5\\u4EF6\",\n            value: memberLoginEmail,\n            onChange: e => {\n              const newMeberLoginEmail = e.target.value;\n              setMemberLoginEmail(newMeberLoginEmail);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"loginPwd\",\n            children: \"\\u5BC6\\u78BC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form-con\",\n            id: \"loginPwd\",\n            placeholder: \"\\u8ACB\\u8F38\\u5165\\u5BC6\\u78BC\",\n            value: memberLoginPwd,\n            onChange: e => {\n              const newMeberLoginPwd = e.target.value;\n              setMemberLoginPwd(newMeberLoginPwd);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group form-check\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: \"loginpwdCheck\" //   onClick={pwdCheck}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            htmlFor: \"loginpwdCheck\",\n            children: \"\\u986F\\u793A\\u5BC6\\u78BC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            id: \"loginsmallinfo\",\n            className: \"form-text text-muted\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"loginInfo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login-btn\",\n        onClick: loginInfoSubmit,\n        children: isAuth ? '登出' : '登入'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  const MemberLoginModal = /*#__PURE__*/_jsxDEV(Modal, { ...props,\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    show: loginModalShow,\n    onHide: modalOnHide,\n    children: loginOrRegister ? loginOrRegisterTrue : []\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 13\n  }, this);\n\n  const loginBtn = /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"login-btn\",\n    onClick: loginBtnCtrl,\n    children: isAuth ? '登出' : '登出'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 13\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loginBtn, MemberLoginModal]\n  }, void 0, true);\n}\n\n_s(SellerLogin, \"YPVVOkMair8EUuUvDRP3KJc3RLc=\");\n\n_c = SellerLogin;\nexport default _c2 = withRouter(SellerLogin);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SellerLogin\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/william/Desktop/taso-taso/seller/src/components/seller_back/pages/SellerLogin.js"],"names":["React","useState","useEffect","Button","Modal","withRouter","SellerLogin","props","isAuth","setisAuth","loginModalShow","setLoginModalShow","memberLoginEmail","setMemberLoginEmail","memberLoginPwd","setMemberLoginPwd","loginInfoSubmit","loginInfo","document","querySelector","innerHTML","data","account","password","fetch","method","headers","body","JSON","stringify","then","res","console","log","json","row","memberLoginId","localStorage","setItem","getItem","alert","history","push","catch","error","loginOrRegister","setLoginOrRegister","modalOnHide","loginBtnCtrl","loginOrRegisterTrue","e","newMeberLoginEmail","target","value","newMeberLoginPwd","MemberLoginModal","loginBtn"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,iBAA9B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAO,0BAAP;;AAIA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAE5B,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,SAAV;AAAqBC,IAAAA,cAArB;AAAqCC,IAAAA;AAArC,MAA2DJ,KAAjE;AAEA,QAAM,CAACK,gBAAD,EAAmBC,mBAAnB,IAA0CZ,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACa,cAAD,EAAiBC,iBAAjB,IAAsCd,QAAQ,CAAC,EAAD,CAApD,CAL4B,CAU3B;;AACA,WAASe,eAAT,GAA2B;AACxB,QAAIC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAhB;;AACA,QAAIP,gBAAgB,KAAK,EAAzB,EAA4B;AAC1BK,MAAAA,SAAS,CAACG,SAAV,GAAoB,SAApB;AACD;;AACD,QAAIN,cAAc,KAAK,EAAvB,EAA0B;AACxBG,MAAAA,SAAS,CAACG,SAAV,GAAoB,OAApB;AACD;;AACD,UAAMC,IAAI,GAAG;AACXC,MAAAA,OAAO,EAAEV,gBADE;AAEXW,MAAAA,QAAQ,EAAET;AAFC,KAAb;AAIAU,IAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC1CC,MAAAA,MAAM,EAAE,MADkC;AAE1CC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFiC;AAM1CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf;AANoC,KAAvC,CAAL,CAQGS,IARH,CAQSC,GAAD,IAAS;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,aAAOA,GAAG,CAACG,IAAJ,EAAP;AACD,KAXH,EAYGJ,IAZH,CAYSK,GAAD,IAAS;AACbH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAAC,CAAD,CAAf;AACA,YAAMC,aAAa,GAAGR,IAAI,CAACC,SAAL,CAAeM,GAAf,CAAtB;AACAE,MAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BH,GAA5B;;AACA,UAAIE,YAAY,CAACE,OAAb,CAAqB,KAArB,MAAgC,EAApC,EAAwC;AACtCC,QAAAA,KAAK,CAAC,OAAD,CAAL,CADsC,CAEtC;;AACA7B,QAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAJ,QAAAA,KAAK,CAACkC,OAAN,CAAcC,IAAd,CAAmB,WAAnB;AACA7B,QAAAA,mBAAmB,CAAC,EAAD,CAAnB;AACAE,QAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACD,OAPD,MASA;AAACyB,QAAAA,KAAK,CAAC,SAAD,CAAL;AAAiB;AACjB,KA1BL,EA2BGG,KA3BH,CA2BUC,KAAD,IAAW;AAChBJ,MAAAA,KAAK,CAAC,OAAD,CAAL;AACD,KA7BH;AA8BD;;AAGD,QAAM,CAACK,eAAD,EAAkBC,kBAAlB,IAAwC7C,QAAQ,CAAC,IAAD,CAAtD;;AAEE,WAAS8C,WAAT,GAAsB;AAClBpC,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAmC,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAjC,IAAAA,mBAAmB,CAAC,EAAD,CAAnB;AACAE,IAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACD,GA/DqB,CAkE3B;;;AACG,WAASiC,YAAT,GAAuB;AACnB,QAAG,CAACxC,MAAJ,EAAW;AACTG,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,KAFD,MAEK;AACHA,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAF,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD;AACF,GA1EqB,CA6E3B;;;AACD,QAAMwC,mBAAmB,gBACrB;AAAA,4BAEE,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA,6BACE,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE,QAAC,KAAD,CAAO,IAAP;AAAA,6BACE;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,OADP;AAEE,YAAA,SAAS,EAAC,UAFZ;AAGE,YAAA,EAAE,EAAC,YAHL;AAIE,gCAAiB,WAJnB;AAKE,YAAA,WAAW,EAAC,4CALd;AAME,YAAA,KAAK,EAAErC,gBANT;AAOE,YAAA,QAAQ,EAAGsC,CAAD,IAAO;AACf,oBAAMC,kBAAkB,GAAGD,CAAC,CAACE,MAAF,CAASC,KAApC;AACAxC,cAAAA,mBAAmB,CAACsC,kBAAD,CAAnB;AACD;AAVH;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAgBE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,SAAS,EAAC,UAFZ;AAGE,YAAA,EAAE,EAAC,UAHL;AAIE,YAAA,WAAW,EAAC,gCAJd;AAKE,YAAA,KAAK,EAAErC,cALT;AAME,YAAA,QAAQ,EAAGoC,CAAD,IAAO;AACf,oBAAMI,gBAAgB,GAAGJ,CAAC,CAACE,MAAF,CAASC,KAAlC;AACAtC,cAAAA,iBAAiB,CAACuC,gBAAD,CAAjB;AACD;AATH;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF,eA8BE;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,kCACE;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,SAAS,EAAC,kBAFZ;AAGE,YAAA,EAAE,EAAC,eAHL,CAIA;;AAJA;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE;AAAO,YAAA,SAAS,EAAC,kBAAjB;AAAoC,YAAA,OAAO,EAAC,eAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,eAUE;AAAO,YAAA,EAAE,EAAC,gBAAV;AAA2B,YAAA,SAAS,EAAC;AAArC;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9BF,eA0CE;AAAG,UAAA,EAAE,EAAC;AAAN;AAAA;AAAA;AAAA;AAAA,gBA1CF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF,eAmDE,QAAC,KAAD,CAAO,MAAP;AAAA,6BACA;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,OAAO,EAAEtC,eAAvC;AAAA,kBAAyDR,MAAM,GAAG,IAAH,GAAU;AAAzE;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAnDF;AAAA,kBADJ;;AA8DQ,QAAM+C,gBAAgB,gBAClB,QAAC,KAAD,OACMhD,KADN;AAEE,IAAA,IAAI,EAAC,IAFP;AAGE,uBAAgB,+BAHlB;AAIE,IAAA,QAAQ,MAJV;AAKE,IAAA,IAAI,EAAEG,cALR;AAME,IAAA,MAAM,EAAEqC,WANV;AAAA,cAQGF,eAAe,GAAGI,mBAAH,GAAuB;AARzC;AAAA;AAAA;AAAA;AAAA,UADJ;;AAaE,QAAMO,QAAQ,gBACZ;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAA8B,IAAA,OAAO,EAAER,YAAvC;AAAA,cACGxC,MAAM,GAAG,IAAH,GAAU;AADnB;AAAA;AAAA;AAAA;AAAA,UADF;;AAOA,sBACE;AAAA,eACCgD,QADD,EAEGD,gBAFH;AAAA,kBADF;AAMD;;GAtKAjD,W;;KAAAA,W;AA0KD,qBAAeD,UAAU,CAACC,WAAD,CAAzB","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Button, Modal } from 'react-bootstrap'\r\nimport { withRouter } from 'react-router-dom'\r\nimport '../../../style/login.css'\r\n\r\n\r\n\r\nfunction SellerLogin(props) {\r\n\r\nconst { isAuth, setisAuth, loginModalShow, setLoginModalShow } = props\r\n\r\nconst [memberLoginEmail, setMemberLoginEmail] = useState('')\r\nconst [memberLoginPwd, setMemberLoginPwd] = useState('')\r\n\r\n\r\n\r\n\r\n //按下modal裡的「登入」觸發的function\r\n function loginInfoSubmit() {\r\n    let loginInfo = document.querySelector('#loginInfo')\r\n    if( memberLoginEmail === ''){\r\n      loginInfo.innerHTML='請輸入電子郵件'\r\n    }\r\n    if( memberLoginPwd === ''){\r\n      loginInfo.innerHTML='請輸入密碼'\r\n    }\r\n    const data = {\r\n      account: memberLoginEmail,\r\n      password: memberLoginPwd,\r\n    }\r\n    fetch('http://localhost:3000/seller/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n\r\n      },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((res) => {\r\n        console.log(res)\r\n        return res.json()\r\n      })\r\n      .then((row) => {\r\n        console.log(row[0])\r\n        const memberLoginId = JSON.stringify(row)\r\n        localStorage.setItem('row', row)\r\n        if (localStorage.getItem('row') !== '') {\r\n          alert(\"登入成功！\")\r\n          // setisAuth(true)\r\n          setLoginModalShow(false)\r\n          props.history.push('/MainPage')\r\n          setMemberLoginEmail('')\r\n          setMemberLoginPwd('')\r\n        }\r\n        else \r\n        {alert(\"帳號密碼錯誤！\")}\r\n        })\r\n      .catch((error) => {\r\n        alert(\"登入失敗！\")\r\n      })\r\n  }\r\n\r\n\r\n  const [loginOrRegister, setLoginOrRegister] = useState(true)\r\n\r\n    function modalOnHide(){\r\n        setLoginModalShow(false)\r\n        setLoginOrRegister(true)\r\n        setMemberLoginEmail('')\r\n        setMemberLoginPwd('')\r\n      }\r\n\r\n\r\n //登入登出btn狀態function\r\n    function loginBtnCtrl(){\r\n        if(!isAuth){\r\n          setLoginModalShow(true)\r\n        }else{\r\n          setLoginModalShow(false)\r\n          setisAuth(false)\r\n        }\r\n      }\r\n    \r\n\r\n //登入\r\nconst loginOrRegisterTrue = (\r\n    <>\r\n    \r\n      <Modal.Header closeButton>\r\n        <Modal.Title>會員登入</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <form>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"loginEmail\">電子郵件</label>\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-con\"\r\n              id=\"loginEmail\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"請輸入電子郵件\"\r\n              value={memberLoginEmail}\r\n              onChange={(e) => {\r\n                const newMeberLoginEmail = e.target.value\r\n                setMemberLoginEmail(newMeberLoginEmail)\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"loginPwd\">密碼</label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-con\"\r\n              id=\"loginPwd\"\r\n              placeholder=\"請輸入密碼\"\r\n              value={memberLoginPwd}\r\n              onChange={(e) => {\r\n                const newMeberLoginPwd = e.target.value\r\n                setMemberLoginPwd(newMeberLoginPwd)\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"form-group form-check\">\r\n            <input\r\n              type=\"checkbox\"\r\n              className=\"form-check-input\"\r\n              id=\"loginpwdCheck\"\r\n            //   onClick={pwdCheck}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"loginpwdCheck\">\r\n              顯示密碼\r\n            </label>\r\n            <small id=\"loginsmallinfo\" className=\"form-text text-muted\"></small>\r\n          </div>\r\n          <p id=\"loginInfo\"></p>\r\n        </form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n      <button className=\"login-btn\" onClick={loginInfoSubmit}>{isAuth ? '登出' : '登入'}</button>\r\n      </Modal.Footer>\r\n      \r\n    </>\r\n  )\r\n        \r\n\r\n\r\n\r\n        const MemberLoginModal = (\r\n            <Modal\r\n              {...props}\r\n              size=\"lg\"\r\n              aria-labelledby=\"contained-modal-title-vcenter\"\r\n              centered\r\n              show={loginModalShow}\r\n              onHide={modalOnHide}\r\n            >\r\n              {loginOrRegister ? loginOrRegisterTrue:[]}\r\n            </Modal>\r\n          )\r\n\r\n          const loginBtn = (\r\n            <button className=\"login-btn\" onClick={loginBtnCtrl}>\r\n              {isAuth ? '登出' : '登出'}\r\n              {/* 登入 */}\r\n            </button>\r\n          )\r\n\r\n          return (\r\n            <>\r\n            {loginBtn}\r\n              {MemberLoginModal}\r\n            </>\r\n          )\r\n        }\r\n        \r\n\r\n\r\n        export default withRouter(SellerLogin)\r\n"]},"metadata":{},"sourceType":"module"}